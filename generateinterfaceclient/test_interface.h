/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.qt.example.dbus.xml -p test_interface
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef TEST_INTERFACE_H
#define TEST_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.qt.example.dbus
 */
class ComQtExampleDbusInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.qt.example.dbus"; }

public:
    ComQtExampleDbusInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~ComQtExampleDbusInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<bool> printStr(const QString &str)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(str);
        return asyncCallWithArgumentList(QStringLiteral("printStr"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace com {
  namespace qt {
    namespace example {
      typedef ::ComQtExampleDbusInterface dbus;
    }
  }
}
#endif
